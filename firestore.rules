rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Function ---
    // This function checks if the user making the request is an admin.
    // It does this by checking if a document with their UID exists in the 'admins' collection.
    // This is the most secure and reliable method for the Spark plan.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // --- Admin-Only Collections: students, registeredDevices ---
    match /students/{studentId} {
      // Only an admin can read, list, create, update, or delete student documents.
      allow read, write: if isAdmin();
    }

    match /registeredDevices/{deviceId} {
        // Only an admin can manage the list of registered devices.
      allow read, write: if isAdmin();
    }
    
    // --- Collection with Special Rules: pendingDevices ---
    match /pendingDevices/{deviceId} {
        // An admin can do anything with pending device requests.
        allow read, write: if isAdmin();
        // A non-admin (student) can ONLY create a new pending device request.
        // They cannot see or modify other requests.
        allow create: if request.auth != null;
    }

    // --- Secure the 'admins' collection ---
    // This prevents anyone (even other admins) from modifying the list of admins
    // directly from the app, making it more secure. Admins should be managed from the console.
    match /admins/{adminId} {
        allow read: if isAdmin(); // Admins can see who other admins are.
        allow write: if false;   // No one can write to the admins collection from the app.
    }
  }
}
