
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // By default, deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Admins collection: allow any authenticated user to read.
    // This is needed for the app to check if a logged-in user has an admin role.
    match /admins/{adminId} {
      allow read: if request.auth != null;
      // Write access should be limited, but for the admin panel, we'll allow admins to write.
      allow write: if request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }

    // Students collection: allow authenticated users to read, but only admins to write.
    match /students/{studentId} {
      allow read: if request.auth != null;
      // Only admins can create, update, or delete student documents.
      allow write: if request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }

    // Pending Devices collection:
    // Students can create their own requests.
    // Admins can read and delete requests.
    match /pendingDevices/{deviceId} {
      allow create: if request.auth.uid == request.resource.data.studentId;
      allow read, delete: if request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }

    // Registered Devices collection:
    // Only admins have full control. Students cannot write here directly.
    // The registration logic will be handled by a secure backend function (our Genkit flow).
    match /registeredDevices/{deviceId} {
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
