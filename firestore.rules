rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is an admin.
    // It checks if the user's email exists in the 'admins' collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.token.email));
    }
    
    // Students can read their own document, admins can read any.
    match /students/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write, create, delete: if isAdmin();
    }
    
    // Only admins can manage pending and registered devices.
    match /pendingDevices/{deviceId} {
      allow read, write, create, delete: if isAdmin();
    }
    
    match /registeredDevices/{deviceId} {
      allow read: if isAdmin() || get(/databases/$(database)/documents/students/$(request.auth.uid)).data.id == resource.data.studentId;
      allow write, create, delete: if isAdmin();
    }
    
    // Admins collection is read-only for admins to prevent self-modification through the app.
    // Should be managed from the Firebase Console.
    match /admins/{email} {
        allow read: if isAdmin();
        allow write: if false; // Prevent modification from client-side code
    }
  }
}
